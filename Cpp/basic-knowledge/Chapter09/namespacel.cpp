/*
声明区：
潜在作用域：
作用域：

注意：假设名称空间和声明区域定义了相同的名称，如果试图使用using 声明将名称空间的名称导入
该声明区域，则这两个名称会发生冲突，从而出错。如果使用using编译指令将该名称空间的名称导入该
声明区域，则局部版本将隐藏名称空间版本。

一些指导原则：
  1. 使用在已命名的名称空间中声明的变量，而不是使用外部全局变量
  2. 使用在已命名的名称空间中声明的变量，而不是使用静态全局变量
  3. 如果开发了一个函数库或类库，将其放在一个名称空间中。事实上，C++当前提倡将标准函数库放在名称空间std中，这种做法扩展
     到了来自C语言中的函数。例如头文件math.h是与C语言兼容的，没有使用名称空间，但C++头文件cmath应将各种数学库函数放在名称空间
     std中。
  4. 晋江编译质量using作为一种将旧代码转换为使用名称空间的的权宜之计
  5. 不要在头文件中使用using编译指令。首先，这样做严格了要让哪些名称可用
  6. 导入名称时，优先选择using申明
  7. 对于using声明，首先将其作用域设置为局部而不是全局。

 

*/